// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth_predicate.proto

#ifndef PROTOBUF_auth_5fpredicate_2eproto__INCLUDED
#define PROTOBUF_auth_5fpredicate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "attrval_msg.pb.h"
// @@protoc_insertion_point(includes)

namespace ac {
namespace serialization {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_auth_5fpredicate_2eproto();
void protobuf_AssignDesc_auth_5fpredicate_2eproto();
void protobuf_ShutdownFile_auth_5fpredicate_2eproto();

class Predicate;
class ComparisonPredicate;
class NegationPredicate;
class PredicateWithList;

enum Predicate_PredicateType {
  Predicate_PredicateType_TRUE = 0,
  Predicate_PredicateType_FALSE = 1,
  Predicate_PredicateType_COMPARISON = 2,
  Predicate_PredicateType_NEGATION = 3,
  Predicate_PredicateType_CONJUNCTION = 4,
  Predicate_PredicateType_DISJUNCTION = 5
};
bool Predicate_PredicateType_IsValid(int value);
const Predicate_PredicateType Predicate_PredicateType_PredicateType_MIN = Predicate_PredicateType_TRUE;
const Predicate_PredicateType Predicate_PredicateType_PredicateType_MAX = Predicate_PredicateType_DISJUNCTION;
const int Predicate_PredicateType_PredicateType_ARRAYSIZE = Predicate_PredicateType_PredicateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Predicate_PredicateType_descriptor();
inline const ::std::string& Predicate_PredicateType_Name(Predicate_PredicateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Predicate_PredicateType_descriptor(), value);
}
inline bool Predicate_PredicateType_Parse(
    const ::std::string& name, Predicate_PredicateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Predicate_PredicateType>(
    Predicate_PredicateType_descriptor(), name, value);
}
enum ComparisonPredicate_Comparison {
  ComparisonPredicate_Comparison_EQUAL = 0,
  ComparisonPredicate_Comparison_GREATER = 1,
  ComparisonPredicate_Comparison_LESS = 2,
  ComparisonPredicate_Comparison_GE = 3,
  ComparisonPredicate_Comparison_LE = 4
};
bool ComparisonPredicate_Comparison_IsValid(int value);
const ComparisonPredicate_Comparison ComparisonPredicate_Comparison_Comparison_MIN = ComparisonPredicate_Comparison_EQUAL;
const ComparisonPredicate_Comparison ComparisonPredicate_Comparison_Comparison_MAX = ComparisonPredicate_Comparison_LE;
const int ComparisonPredicate_Comparison_Comparison_ARRAYSIZE = ComparisonPredicate_Comparison_Comparison_MAX + 1;

const ::google::protobuf::EnumDescriptor* ComparisonPredicate_Comparison_descriptor();
inline const ::std::string& ComparisonPredicate_Comparison_Name(ComparisonPredicate_Comparison value) {
  return ::google::protobuf::internal::NameOfEnum(
    ComparisonPredicate_Comparison_descriptor(), value);
}
inline bool ComparisonPredicate_Comparison_Parse(
    const ::std::string& name, ComparisonPredicate_Comparison* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ComparisonPredicate_Comparison>(
    ComparisonPredicate_Comparison_descriptor(), name, value);
}
// ===================================================================

class Predicate : public ::google::protobuf::Message {
 public:
  Predicate();
  virtual ~Predicate();

  Predicate(const Predicate& from);

  inline Predicate& operator=(const Predicate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Predicate& default_instance();

  void Swap(Predicate* other);

  // implements Message ----------------------------------------------

  Predicate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Predicate& from);
  void MergeFrom(const Predicate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Predicate_PredicateType PredicateType;
  static const PredicateType TRUE = Predicate_PredicateType_TRUE;
  static const PredicateType FALSE = Predicate_PredicateType_FALSE;
  static const PredicateType COMPARISON = Predicate_PredicateType_COMPARISON;
  static const PredicateType NEGATION = Predicate_PredicateType_NEGATION;
  static const PredicateType CONJUNCTION = Predicate_PredicateType_CONJUNCTION;
  static const PredicateType DISJUNCTION = Predicate_PredicateType_DISJUNCTION;
  static inline bool PredicateType_IsValid(int value) {
    return Predicate_PredicateType_IsValid(value);
  }
  static const PredicateType PredicateType_MIN =
    Predicate_PredicateType_PredicateType_MIN;
  static const PredicateType PredicateType_MAX =
    Predicate_PredicateType_PredicateType_MAX;
  static const int PredicateType_ARRAYSIZE =
    Predicate_PredicateType_PredicateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PredicateType_descriptor() {
    return Predicate_PredicateType_descriptor();
  }
  static inline const ::std::string& PredicateType_Name(PredicateType value) {
    return Predicate_PredicateType_Name(value);
  }
  static inline bool PredicateType_Parse(const ::std::string& name,
      PredicateType* value) {
    return Predicate_PredicateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ac.serialization.Predicate.PredicateType predicate_type = 1;
  inline bool has_predicate_type() const;
  inline void clear_predicate_type();
  static const int kPredicateTypeFieldNumber = 1;
  inline ::ac::serialization::Predicate_PredicateType predicate_type() const;
  inline void set_predicate_type(::ac::serialization::Predicate_PredicateType value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Predicate)
  // @@protoc_insertion_point(class_scope:ac.serialization.Predicate)
 private:
  inline void set_has_predicate_type();
  inline void clear_has_predicate_type();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int predicate_type_;
  friend void  protobuf_AddDesc_auth_5fpredicate_2eproto();
  friend void protobuf_AssignDesc_auth_5fpredicate_2eproto();
  friend void protobuf_ShutdownFile_auth_5fpredicate_2eproto();

  void InitAsDefaultInstance();
  static Predicate* default_instance_;
};
// -------------------------------------------------------------------

class ComparisonPredicate : public ::google::protobuf::Message {
 public:
  ComparisonPredicate();
  virtual ~ComparisonPredicate();

  ComparisonPredicate(const ComparisonPredicate& from);

  inline ComparisonPredicate& operator=(const ComparisonPredicate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComparisonPredicate& default_instance();

  void Swap(ComparisonPredicate* other);

  // implements Message ----------------------------------------------

  ComparisonPredicate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComparisonPredicate& from);
  void MergeFrom(const ComparisonPredicate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ComparisonPredicate_Comparison Comparison;
  static const Comparison EQUAL = ComparisonPredicate_Comparison_EQUAL;
  static const Comparison GREATER = ComparisonPredicate_Comparison_GREATER;
  static const Comparison LESS = ComparisonPredicate_Comparison_LESS;
  static const Comparison GE = ComparisonPredicate_Comparison_GE;
  static const Comparison LE = ComparisonPredicate_Comparison_LE;
  static inline bool Comparison_IsValid(int value) {
    return ComparisonPredicate_Comparison_IsValid(value);
  }
  static const Comparison Comparison_MIN =
    ComparisonPredicate_Comparison_Comparison_MIN;
  static const Comparison Comparison_MAX =
    ComparisonPredicate_Comparison_Comparison_MAX;
  static const int Comparison_ARRAYSIZE =
    ComparisonPredicate_Comparison_Comparison_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Comparison_descriptor() {
    return ComparisonPredicate_Comparison_descriptor();
  }
  static inline const ::std::string& Comparison_Name(Comparison value) {
    return ComparisonPredicate_Comparison_Name(value);
  }
  static inline bool Comparison_Parse(const ::std::string& name,
      Comparison* value) {
    return ComparisonPredicate_Comparison_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  static const int kComparisonFieldNumber = 96;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ac::serialization::Predicate,
      ::google::protobuf::internal::EnumTypeTraits< ::ac::serialization::ComparisonPredicate_Comparison, ::ac::serialization::ComparisonPredicate_Comparison_IsValid>, 14, false >
    comparison;
  static const int kColAttrFieldNumber = 97;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ac::serialization::Predicate,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    col_attr;
  static const int kAttrvalFieldNumber = 98;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ac::serialization::Predicate,
      ::google::protobuf::internal::MessageTypeTraits< ::ac::serialization::AttrValMsg >, 11, false >
    attrval;
  // @@protoc_insertion_point(class_scope:ac.serialization.ComparisonPredicate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_auth_5fpredicate_2eproto();
  friend void protobuf_AssignDesc_auth_5fpredicate_2eproto();
  friend void protobuf_ShutdownFile_auth_5fpredicate_2eproto();

  void InitAsDefaultInstance();
  static ComparisonPredicate* default_instance_;
};
// -------------------------------------------------------------------

class NegationPredicate : public ::google::protobuf::Message {
 public:
  NegationPredicate();
  virtual ~NegationPredicate();

  NegationPredicate(const NegationPredicate& from);

  inline NegationPredicate& operator=(const NegationPredicate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NegationPredicate& default_instance();

  void Swap(NegationPredicate* other);

  // implements Message ----------------------------------------------

  NegationPredicate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NegationPredicate& from);
  void MergeFrom(const NegationPredicate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kOperandFieldNumber = 128;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ac::serialization::Predicate,
      ::google::protobuf::internal::MessageTypeTraits< ::ac::serialization::Predicate >, 11, false >
    operand;
  // @@protoc_insertion_point(class_scope:ac.serialization.NegationPredicate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_auth_5fpredicate_2eproto();
  friend void protobuf_AssignDesc_auth_5fpredicate_2eproto();
  friend void protobuf_ShutdownFile_auth_5fpredicate_2eproto();

  void InitAsDefaultInstance();
  static NegationPredicate* default_instance_;
};
// -------------------------------------------------------------------

class PredicateWithList : public ::google::protobuf::Message {
 public:
  PredicateWithList();
  virtual ~PredicateWithList();

  PredicateWithList(const PredicateWithList& from);

  inline PredicateWithList& operator=(const PredicateWithList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PredicateWithList& default_instance();

  void Swap(PredicateWithList* other);

  // implements Message ----------------------------------------------

  PredicateWithList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PredicateWithList& from);
  void MergeFrom(const PredicateWithList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kOperandsFieldNumber = 160;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ac::serialization::Predicate,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::ac::serialization::Predicate >, 11, false >
    operands;
  // @@protoc_insertion_point(class_scope:ac.serialization.PredicateWithList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_auth_5fpredicate_2eproto();
  friend void protobuf_AssignDesc_auth_5fpredicate_2eproto();
  friend void protobuf_ShutdownFile_auth_5fpredicate_2eproto();

  void InitAsDefaultInstance();
  static PredicateWithList* default_instance_;
};
// ===================================================================


// ===================================================================

// Predicate

// required .ac.serialization.Predicate.PredicateType predicate_type = 1;
inline bool Predicate::has_predicate_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Predicate::set_has_predicate_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Predicate::clear_has_predicate_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Predicate::clear_predicate_type() {
  predicate_type_ = 0;
  clear_has_predicate_type();
}
inline ::ac::serialization::Predicate_PredicateType Predicate::predicate_type() const {
  // @@protoc_insertion_point(field_get:ac.serialization.Predicate.predicate_type)
  return static_cast< ::ac::serialization::Predicate_PredicateType >(predicate_type_);
}
inline void Predicate::set_predicate_type(::ac::serialization::Predicate_PredicateType value) {
  assert(::ac::serialization::Predicate_PredicateType_IsValid(value));
  set_has_predicate_type();
  predicate_type_ = value;
  // @@protoc_insertion_point(field_set:ac.serialization.Predicate.predicate_type)
}

// -------------------------------------------------------------------

// ComparisonPredicate

// -------------------------------------------------------------------

// NegationPredicate

// -------------------------------------------------------------------

// PredicateWithList


// @@protoc_insertion_point(namespace_scope)

}  // namespace serialization
}  // namespace ac

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ac::serialization::Predicate_PredicateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ac::serialization::Predicate_PredicateType>() {
  return ::ac::serialization::Predicate_PredicateType_descriptor();
}
template <> struct is_proto_enum< ::ac::serialization::ComparisonPredicate_Comparison> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ac::serialization::ComparisonPredicate_Comparison>() {
  return ::ac::serialization::ComparisonPredicate_Comparison_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_auth_5fpredicate_2eproto__INCLUDED
